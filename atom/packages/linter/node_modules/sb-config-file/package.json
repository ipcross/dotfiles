{
  "_args": [
    [
      {
        "raw": "sb-config-file@^3.0.2",
        "scope": null,
        "escapedName": "sb-config-file",
        "name": "sb-config-file",
        "rawSpec": "^3.0.2",
        "spec": ">=3.0.2 <4.0.0",
        "type": "range"
      },
      "/tmp/d-11765-15806-12ob2t0.yxmw/package.tgz"
    ]
  ],
  "_from": "sb-config-file@>=3.0.2 <4.0.0",
  "_id": "sb-config-file@3.0.3",
  "_inCache": true,
  "_location": "/linter/sb-config-file",
  "_nodeVersion": "7.9.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/sb-config-file-3.0.3.tgz_1492313301652_0.8651405514683574"
  },
  "_npmUser": {
    "name": "steelbrain",
    "email": "i@steelbrain.me"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sb-config-file@^3.0.2",
    "scope": null,
    "escapedName": "sb-config-file",
    "name": "sb-config-file",
    "rawSpec": "^3.0.2",
    "spec": ">=3.0.2 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/linter"
  ],
  "_resolved": "https://registry.npmjs.org/sb-config-file/-/sb-config-file-3.0.3.tgz",
  "_shasum": "1f4918f6440c26dba281d9686cb98ecdbeea803a",
  "_shrinkwrap": null,
  "_spec": "sb-config-file@^3.0.2",
  "_where": "/tmp/d-11765-15806-12ob2t0.yxmw/package.tgz",
  "author": {
    "name": "steelbrain",
    "email": "i@steelbrain.me"
  },
  "bugs": {
    "url": "https://github.com/steelbrain/config-file/issues"
  },
  "dependencies": {
    "sb-fs": "^3.0.0",
    "strip-bom": "^3.0.0",
    "write-file-atomic": "^1.3.1"
  },
  "description": "Manage JSON configuration files without race conditions",
  "devDependencies": {
    "babel-cli": "^6.11.4",
    "babel-preset-steelbrain": "^5.0.2",
    "eslint-config-steelbrain": "^3.0.1",
    "flow-bin": "^0.44.0",
    "jasmine-fix": "^1.0.1",
    "mkdirp": "^0.5.1",
    "rimraf": "^2.6.1",
    "sb-copy": "^1.0.1",
    "sb-fs": "^3.0.0",
    "sb-promisify": "^2.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "1f4918f6440c26dba281d9686cb98ecdbeea803a",
    "tarball": "https://registry.npmjs.org/sb-config-file/-/sb-config-file-3.0.3.tgz"
  },
  "gitHead": "20c12993644a699ec7de70a75d57e97f35b41e55",
  "homepage": "https://github.com/steelbrain/config-file#readme",
  "keywords": [
    "cli",
    "app",
    "config"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "steelbrain",
      "email": "i@steelbrain.me"
    }
  ],
  "name": "sb-config-file",
  "optionalDependencies": {},
  "readme": "sb-config-file\n=========\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/steelbrain/config-file.svg)](https://greenkeeper.io/)\n\nsb-config-file is a Node.js module to help you manage your JSON configuration files without worrying about concurrency issues and double writes\n\n## API\n\n```js\ntype Options = {\n  prettyPrint: boolean = true,\n  atomicWrites: boolean = true,\n  createIfNonExistent: boolean = false,\n}\n\nexport default class ConfigFile {\n  get(dotSeparatedKey: string, defaultValue = null): Promise<any>\n  getSync(dotSeparatedKey: string, defaultValue = null): any\n  set(dotSeparatedKey: string, value, strict = false): Promise<void>\n  setSync(dotSeparatedKey: string, value, strict = false): void\n  append(dotSeparatedKey: string, value, strict = false): Promise<void>\n  appendSync(dotSeparatedKey: string, value, strict = false): void\n  delete(dotSeparatedKey: string, strict = false): Promise<void>\n  deleteSync(dotSeparatedKey: string, strict = false): void\n\n  static get(filePath: string, defaultConfig: Object, options: Options): ConfigFile\n}}\n```\n\n## Example Usage\n\n```js\nconst Path = require('path')\nconst ConfigFile = require('sb-config-file')\n\nConfigFile.get(Path.join(__dirname, 'config.json')).then(function(configFile) {\n  configFile.set('database.host', 'localhost')\n  configFile.set('database.user', 'steelbrain')\n\n  console.log(configFile.get('database.host')) // 'localhost'\n  console.log(configFile.get('database.user')) // 'steelbrain'\n  console.log(configFile.get('database'))      // { host: 'localhost', user: 'steelbrain' }\n\n  configFile.delete('database.host')\n  console.log(configFile.get('database'))      // { user: 'steelbrain' }\n\n  configFile.set('someArray', [1, 2, 3])\n  console.log(configFile.get('someArray.0')) // 1\n  console.log(configFile.get('someArray.1')) // 2\n  console.log(configFile.get('someArray.2')) // 3\n\n  configFile.set('someArray.5', 50)\n  console.log(configFile.get('someArray.0')) // 1\n  console.log(configFile.get('someArray.1')) // 2\n  console.log(configFile.get('someArray.2')) // 3\n  console.log(configFile.get('someArray.3')) // null\n  console.log(configFile.get('someArray.4')) // null\n  console.log(configFile.get('someArray.5')) // 50\n\n  configFile.set('newArray', [1, 2, 3])\n  console.log(configFile.get('newArray')) // [1, 2, 3]\n  configFile.append('newArray', 20)\n  console.log(configFile.get('newArray')) // [1, 2, 3, 20]\n})\n```\n\n## LICENSE\n\nThis package is licensed under the terms of MIT License. See the LICENSE file for more info.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/steelbrain/config-file.git"
  },
  "scripts": {
    "clean": "rm -rf lib",
    "compile": "npm run clean; babel src --out-dir lib",
    "test": "(apm test) && (flow check) && (eslint . )",
    "watch": "npm run compile -- -w"
  },
  "version": "3.0.3"
}
