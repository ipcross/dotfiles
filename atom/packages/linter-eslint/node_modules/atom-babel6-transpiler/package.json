{
  "_args": [
    [
      {
        "raw": "atom-babel6-transpiler@^1.1.1",
        "scope": null,
        "escapedName": "atom-babel6-transpiler",
        "name": "atom-babel6-transpiler",
        "rawSpec": "^1.1.1",
        "spec": ">=1.1.1 <2.0.0",
        "type": "range"
      },
      "/tmp/d-11765-15437-gijc49.mqqo/package.tgz"
    ]
  ],
  "_from": "atom-babel6-transpiler@>=1.1.1 <2.0.0",
  "_id": "atom-babel6-transpiler@1.1.1",
  "_inCache": true,
  "_location": "/linter-eslint/atom-babel6-transpiler",
  "_nodeVersion": "6.9.4",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/atom-babel6-transpiler-1.1.1.tgz_1491271473857_0.46539989160373807"
  },
  "_npmUser": {
    "name": "binarymuse",
    "email": "michelle@michelletilley.net"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "atom-babel6-transpiler@^1.1.1",
    "scope": null,
    "escapedName": "atom-babel6-transpiler",
    "name": "atom-babel6-transpiler",
    "rawSpec": "^1.1.1",
    "spec": ">=1.1.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/linter-eslint"
  ],
  "_resolved": "https://registry.npmjs.org/atom-babel6-transpiler/-/atom-babel6-transpiler-1.1.1.tgz",
  "_shasum": "cb7d91979b0dcfe4df21b24ab5388bd219ff2174",
  "_shrinkwrap": null,
  "_spec": "atom-babel6-transpiler@^1.1.1",
  "_where": "/tmp/d-11765-15437-gijc49.mqqo/package.tgz",
  "bugs": {
    "url": "https://github.com/atom/atom-babel6-transpiler/issues"
  },
  "dependencies": {
    "babel-core": "6.x"
  },
  "description": "A transpiler for Atom packages that processes code with Babel",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "cb7d91979b0dcfe4df21b24ab5388bd219ff2174",
    "tarball": "https://registry.npmjs.org/atom-babel6-transpiler/-/atom-babel6-transpiler-1.1.1.tgz"
  },
  "gitHead": "22e7342b57e7b29cb38069e44b70d6010958b299",
  "homepage": "https://github.com/atom/atom-babel6-transpiler#readme",
  "keywords": [
    "atom",
    "babel",
    "transpile",
    "transpiler"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "atom",
      "email": "nathan@github.com"
    },
    {
      "name": "binarymuse",
      "email": "michelle@michelletilley.net"
    },
    {
      "name": "kuychaco",
      "email": "kuychaco@gmail.com"
    },
    {
      "name": "nathansobo",
      "email": "nathan@github.com"
    },
    {
      "name": "smashwilson",
      "email": "smashwilson@gmail.com"
    }
  ],
  "name": "atom-babel6-transpiler",
  "optionalDependencies": {},
  "readme": "# atom-babel6-transpiler\n\nThis project implements an [Atom package transpiler]() that transpiles your package's files with Babel 6.\n\n## Usage\n\n1. Install the package\n2. Add an `atomTranspilers` entry to your `package.json`\n3. Install Babel presets and plugins, and configure Babel as you wish\n\nIn detail:\n\n**1.** First, install the package from the npm registry:\n\n    npm install --save atom-babel6-transpiler\n\n**2.** Next, modify your `package.json` to include a reference to the transpiler for any files you want Babel to process as described [in the Atom Flight Manual](). For example, to process every file ending in `.js` in your package, you could use:\n\n```javascript\n{\n  ...\n  \"atomTranspilers\": [\n    {\n      \"glob\": \"**/*.js\",\n      \"transpiler\": \"atom-babel6-transpiler\"\n    }\n  ]\n}\n```\n\n**3.** Finally, install Babel and all the presets and plugins you want to use as normal. For a simple example, if you wanted to use the ES2015 and React presets, you might run:\n\n    npm install --save babel-preset-es2015 babel-preset-react\n\nand then create a [`.babelrc` file](http://babeljs.io/docs/usage/babelrc/) to configure Babel to use them:\n\n```javascript\n{\n  \"presets\": [\"es2015\", \"react\"]\n}\n```\n\nYou may also specify options in your `package.json` inside the optional `options` object; the subkey `babel`, if it exists, will be passed [as options to `babel.transform`](http://babeljs.io/docs/usage/api/#babeltransformcode-optionsdocsusageoptions).\n\n```javascript\n{\n  ...\n  \"atomTranspilers\": [\n    {\n      \"glob\": \"**/*.js\",\n      \"transpiler\": \"atom-babel6-transpiler\",\n      \"options\": {\n        \"babel\": {\n          \"presets\": [\"es2015\", \"react\"]\n        }\n      }\n    }\n  ]\n}\n```\n\n### Options\n\nYou may specify the following options as values of the `options` object in your `package.json`:\n\n|Option|Default|Description|\n|--:|---|---|\n|`setBabelEnv`|`true`|Sets the `BABEL_ENV` environment variable to `\"development\"` when `atom.inDevMode()` or `atom.inSpecMode()` is true and `\"production\"` otherwise. Any value other than boolean `false` enables this feature. The feature returns `BABEL_ENV` to its prior value after transpilation finishes.|\n|`babel`|`{}`|Options to pass as the second argument to `babel.transform` (the same options you can put in a `.babelrc`).|\n|`cacheKeyFiles`|`[]`|An array of files to include when determining whether or not to use the cache. For example, to force a recompile anytime your `.babelrc` changes, add `.babelrc` to this array.|\n\n## Other Details\n\n### Source Maps\n\nTo enable source maps within Atom, set the Babel `sourceMaps` option to `\"inline\"` in your Babel configuration.\n\n### Babel Environment\n\nBabel supports [an option called `env`](https://babeljs.io/docs/usage/babelrc/#env-option) that allows you to configure Babel on a per-environment basis. The Babel environment is controlled via an environment variable called `BABEL_ENV`; this module automatically sets the environment variable to `\"development\"` if Atom is in dev mode (`atom.inDevMode()` returns `true`) and `\"production\"` otherwise.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/atom/atom-babel6-transpiler.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.1.1"
}
