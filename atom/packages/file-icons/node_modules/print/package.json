{
  "_args": [
    [
      {
        "raw": "print@*",
        "scope": null,
        "escapedName": "print",
        "name": "print",
        "rawSpec": "*",
        "spec": "*",
        "type": "range"
      },
      "/tmp/d-11762-7383-haxuja.j1lu6561or/package.tgz"
    ]
  ],
  "_from": "print@*",
  "_id": "print@1.0.2",
  "_inCache": true,
  "_location": "/file-icons/print",
  "_nodeVersion": "7.3.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/print-1.0.2.tgz_1482371840580_0.8103754697367549"
  },
  "_npmUser": {
    "name": "alhadis",
    "email": "gardnerjohng@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "print@*",
    "scope": null,
    "escapedName": "print",
    "name": "print",
    "rawSpec": "*",
    "spec": "*",
    "type": "range"
  },
  "_requiredBy": [
    "/file-icons"
  ],
  "_resolved": "https://registry.npmjs.org/print/-/print-1.0.2.tgz",
  "_shasum": "642af8a9ccdb17ab194ca6984557df2a425b0839",
  "_shrinkwrap": null,
  "_spec": "print@*",
  "_where": "/tmp/d-11762-7383-haxuja.j1lu6561or/package.tgz",
  "author": {
    "name": "John Gardner",
    "email": "gardnerjohng@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/Alhadis/Print/issues"
  },
  "dependencies": {},
  "description": "Generate a human-readable representation of a value.",
  "devDependencies": {
    "chai": "*",
    "chai-untab": "*",
    "mocha": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "642af8a9ccdb17ab194ca6984557df2a425b0839",
    "tarball": "https://registry.npmjs.org/print/-/print-1.0.2.tgz"
  },
  "engines": {
    "node": ">=6.0.0"
  },
  "files": [
    "print.js"
  ],
  "gitHead": "3ba579cc0829118f4713f38bff5118736a41f073",
  "homepage": "https://github.com/Alhadis/Print#readme",
  "keywords": [
    "stringify",
    "trace",
    "debug",
    "outline",
    "format",
    "string"
  ],
  "license": "ISC",
  "main": "print.js",
  "maintainers": [
    {
      "name": "alhadis",
      "email": "gardnerjohng@gmail.com"
    }
  ],
  "name": "print",
  "optionalDependencies": {},
  "readme": "Print\n=====\n\nGenerate a human-readable representation of a value. Focussed on producing clean\nand *accurate* depictions of data. Suitable for debugging and generating diffs.\n\n\nUsage\n-----\n\n```js\nconst print = require(\"print\");\nlet output = print({\n    foo: \"bar\",\n    baz: \"quux\",\n    list: [1, 2, 3, 4, \"five\"]\n});\nconsole.log(output);\n\nprint.out(obj); // Shortcut for console.log(print(obj));\n```\n\n\n### Comparison with built-in functions\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nprint                JSON.stringify          util.inspect\n\n{                    {                       { foo: 'bar',\n    baz: \"quux\"          \"foo\": \"bar\",         baz: 'quux',\n    foo: \"bar\"           \"baz\": \"quux\",        list:\n    list: [              \"list\": [             [ 1,\n        1                    1,                  2,\n        2                    2,                  3,\n        3                    3,                  4,\n        4                    4,                  'five' ] }\n        \"five\"               \"five\"\n    ]                    ]\n}                    }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n`print` also handles circular references by showing a `->` pointing to where the\nobject was first mentioned. For example, the following code:\n\n```js\nconst A = {};\nconst B = {foo: A};\nprint({A, B});\n```\n\nWill produce:\n~~~\n{\n    A: {}\n    B: {\n        foo: -> A\n    }\n}\n~~~\n\n\n\nOptions\n-------\nAn optional second parameter can be passed to refine `print`'s output.\n\nAvailable options and their default values are listed below:\n\n```js\nprint(input, {\n    ampedSymbols:     true,\n    escapeChars:      /(?!\\x20)\\s|\\\\/g,\n    maxArrayLength:   100,\n    showArrayIndices: false,\n    showArrayLength:  false,\n    sortProps:        true\n});\n```\n\n\n### ampedSymbols\n[Boolean]  \nPrefix [Symbol]-keyed properties with `@@`. Disable to show `Symbol(…)` instead.\n\n\n\n### escapeChars\n[RegExp] | [Function]  \nWhat characters, if any, are escaped in string values.\n\nBy default, anything that alters the output's meaning or layout is escaped:\n\n    \\f \\n \\r \\t \\v \\\\\n\nThis can be overridden with a custom expression or callback, the latter of which\nreceives the entire string as an argument.\n\nPassing falsey values to `escapeChars` disables escaping altogether, which isn't\nrecommended if your input contains line-breaks or tabulation.\n\n\n\n### maxArrayLength\n[Number]  \nMaximum number of array values to show before truncating them:\n\n~~~\n[\n    1\n    2\n    3\n\n    … 7 more values not shown\n]\n~~~\n\nNote this excludes any named properties stored on the Array object:\n\n```js\nconst input = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\ninput.foo = \"bar\";\nprint(input, { maxArrayLength: 3 })\n```\n\n~~~\n[\n    1\n    2\n    3\n\t\n    … 7 more values not shown\n\n    foo: \"bar\"\n]\n~~~\n\n\n\n### showArrayIndices\n[Boolean]  \nShow the index of each element in an array.\n\n~~~\n[                  [\n    \"A\"                0: \"A\"\n    \"B\"      ->        1: \"B\"\n    \"C\"                2: \"C\"\n]                  ]\n~~~\n\n\n### showArrayLength\n[Boolean]  \nDisplay an array's `length` property after its values:\n\n~~~\n[\n    \"A\"\n    \"B\"\n    \"C\"\n    length: 3\n]\n~~~\n\n\n### sortProps\n[Boolean]  \nAlphabetise the enumerable properties of printed objects.\n\nTo display properties in the order they were enumerated, set this to `false`.\n\nNote that alphabetisation is case-insensitive.\n\n\n\n[Referenced links]: ____________________________________________________________\n[Boolean]:   http://mdn.io/JavaScript/Reference/Global_Objects/Boolean\n[Function]:  http://mdn.io/JavaScript/Reference/Global_Objects/Function\n[Number]:    http://mdn.io/JavaScript/Reference/Global_Objects/Number\n[RegExp]:    http://mdn.io/JavaScript/Reference/Global_Objects/RegExp\n[Symbol]:    http://mdn.io/JavaScript/Reference/Global_Objects/Symbol\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Alhadis/Print.git"
  },
  "scripts": {},
  "version": "1.0.2"
}
