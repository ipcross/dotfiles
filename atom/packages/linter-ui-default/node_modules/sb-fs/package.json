{
  "_args": [
    [
      {
        "raw": "sb-fs@^3.0.0",
        "scope": null,
        "escapedName": "sb-fs",
        "name": "sb-fs",
        "rawSpec": "^3.0.0",
        "spec": ">=3.0.0 <4.0.0",
        "type": "range"
      },
      "/tmp/apm-install-dir-11765-16229-1coia2u.zcq7l/node_modules/linter-ui-default/node_modules/atom-package-deps"
    ]
  ],
  "_from": "sb-fs@>=3.0.0 <4.0.0",
  "_id": "sb-fs@3.0.0",
  "_inCache": true,
  "_location": "/linter-ui-default/sb-fs",
  "_nodeVersion": "7.7.2",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/sb-fs-3.0.0.tgz_1491783287336_0.6180746518075466"
  },
  "_npmUser": {
    "name": "steelbrain",
    "email": "i@steelbrain.me"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sb-fs@^3.0.0",
    "scope": null,
    "escapedName": "sb-fs",
    "name": "sb-fs",
    "rawSpec": "^3.0.0",
    "spec": ">=3.0.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/linter-ui-default/atom-package-deps"
  ],
  "_resolved": "https://registry.npmjs.org/sb-fs/-/sb-fs-3.0.0.tgz",
  "_shasum": "fbdcdd3010e80a1b8e27490cef336064974203b8",
  "_shrinkwrap": null,
  "_spec": "sb-fs@^3.0.0",
  "_where": "/tmp/apm-install-dir-11765-16229-1coia2u.zcq7l/node_modules/linter-ui-default/node_modules/atom-package-deps",
  "author": {
    "name": "steelbrain"
  },
  "bugs": {
    "url": "https://github.com/steelbrain/fs/issues"
  },
  "dependencies": {
    "sb-promisify": "^2.0.1",
    "strip-bom-buf": "^1.0.0"
  },
  "description": "Promisified fs for Node.js",
  "devDependencies": {
    "babel-cli": "^6.14.0",
    "babel-preset-steelbrain": "^5.0.0",
    "eslint-config-steelbrain": "^3.0.0",
    "flow-bin": "^0.43.0",
    "jasmine-fix": "^1.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "fbdcdd3010e80a1b8e27490cef336064974203b8",
    "tarball": "https://registry.npmjs.org/sb-fs/-/sb-fs-3.0.0.tgz"
  },
  "gitHead": "eab6c138a842d923aaebe982ba6d7900bbcf8d4a",
  "homepage": "https://github.com/steelbrain/fs#readme",
  "keywords": [
    "sb",
    "fs",
    "promise"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "steelbrain",
      "email": "i@steelbrain.me"
    }
  ],
  "name": "sb-fs",
  "optionalDependencies": {},
  "readme": "# FS\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/steelbrain/fs.svg)](https://greenkeeper.io/)\n\n`sb-fs` is a Node.js module that exports a promisified FS.\n\n## Installation\n\n```\nnpm install --save sb-fs\n```\n\n## API\n\n```js\nexport promisifyAll(*) from 'fs'\nexport function rimraf(path: string): Promise<void>\nexport function mkdirp(path: string): Promise<void>\nexport function exists(path: string): Promise<boolean>\nexport function readFile(path: string): Promise<string>\n// ^ Returns a BOM stripped string\n```\n\n## Usage\n\n```js\nimport { readFile, rimraf, mkdirp, exists, createReadStream, createWriteStream } from 'sb-fs'\n\nexport default async function freedom() {\n  await mkdirp('/path/to/democracy')\n  await rimraf('/path/to/communism')\n  console.log(await readFile(__filename))\n  console.log(await exists('/path/to/humanity') ? 'it exists!!' : 'Naah it doesnt exist' )\n  createReadStream('source.js').pipe(createWriteStream('target.js'), { end: true })\n}\n```\n\n## License\n\nThis package is licensed under the terms of MIT License. See the LICENSE file for more info.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/steelbrain/fs.git"
  },
  "scripts": {
    "clean": "rm -rf lib",
    "compile": "npm run clean; babel src --out-dir lib",
    "test": "(apm test) && (flow check) && (eslint . )",
    "watch": "npm run compile -- -w"
  },
  "version": "3.0.0"
}
