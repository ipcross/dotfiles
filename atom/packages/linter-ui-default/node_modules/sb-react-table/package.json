{
  "_args": [
    [
      {
        "raw": "sb-react-table@^1.0.1",
        "scope": null,
        "escapedName": "sb-react-table",
        "name": "sb-react-table",
        "rawSpec": "^1.0.1",
        "spec": ">=1.0.1 <2.0.0",
        "type": "range"
      },
      "/tmp/d-11765-16229-1dby5nx.km77/package.tgz"
    ]
  ],
  "_from": "sb-react-table@>=1.0.1 <2.0.0",
  "_id": "sb-react-table@1.0.1",
  "_inCache": true,
  "_location": "/linter-ui-default/sb-react-table",
  "_nodeVersion": "7.7.2",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/sb-react-table-1.0.1.tgz_1489639321728_0.4476810940541327"
  },
  "_npmUser": {
    "name": "steelbrain",
    "email": "i@steelbrain.me"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sb-react-table@^1.0.1",
    "scope": null,
    "escapedName": "sb-react-table",
    "name": "sb-react-table",
    "rawSpec": "^1.0.1",
    "spec": ">=1.0.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/linter-ui-default"
  ],
  "_resolved": "https://registry.npmjs.org/sb-react-table/-/sb-react-table-1.0.1.tgz",
  "_shasum": "16626652c4c2c624f65f34f2787fb0226059fa2d",
  "_shrinkwrap": null,
  "_spec": "sb-react-table@^1.0.1",
  "_where": "/tmp/d-11765-16229-1dby5nx.km77/package.tgz",
  "author": {
    "name": "steelbrain"
  },
  "bugs": {
    "url": "https://github.com/steelbrain/react-table/issues"
  },
  "dependencies": {},
  "description": "React Table Component done right",
  "devDependencies": {
    "babel-cli": "^6.14.0",
    "babel-preset-steelbrain": "^4.0.2",
    "eslint-config-steelbrain": "^1.0.4",
    "flow-bin": "^0.32.0",
    "jasmine-fix": "^1.0.1",
    "react": "^15.3.1",
    "react-dom": "^15.3.1"
  },
  "directories": {},
  "dist": {
    "shasum": "16626652c4c2c624f65f34f2787fb0226059fa2d",
    "tarball": "https://registry.npmjs.org/sb-react-table/-/sb-react-table-1.0.1.tgz"
  },
  "gitHead": "189c08929e7f040e9e38b32734ae21eca523702a",
  "homepage": "https://github.com/steelbrain/react-table#readme",
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "steelbrain",
      "email": "i@steelbrain.me"
    }
  ],
  "name": "sb-react-table",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^15.0.0",
    "react-dom": "^15.0.0"
  },
  "readme": "# ReactTable\n\nReact-Table is an efficient React table component that gives you freedom.\n\n## Installation\n\n```\nnpm install --save sb-react-table\n```\n\n## API\n\n```js\ntype Row = Object | Array\ntype Column = {\n   key: string,\n   label: string,\n   sortable?: boolean,\n   onClick?: ((e: MouseEvent, row: Object) => any),\n}\ntype SortInfo = Array<{ column: string, type: 'asc' | 'desc' }>\n\n<ReactTable\n  rows: Array<Row>,\n  columns: Array<Column>,\n\n  style?: Object,\n  className?: string,\n\n  initialSort?: SortInfo,\n  sort?: ((sortInfo: SortInfo, rows: Array<Row>) => Array<Row>),\n  rowKey: ((row: Row) => string),\n  // ^ aka a function that takes row and returns string unique key for that row\n\n  renderHeaderColumn?: ((headerColumn: any) => string),\n  renderBodyColumn?: ((row: Object, column: string) => string),\n/>\n```\n\n## Usage\n\n```js\nconst ReactTable = require('sb-react-table')\n\nconst rows = [\n  { file: '/path/a', message: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus id molestie nisi' },\n  { file: '/path/b', message: 'Vivamus tincidunt ligula ut ligula laoreet faucibus' },\n  { file: '/path/a', message: 'Proin tincidunt justo nulla, sit amet accumsan lectus pretium vel' },\n  { file: '/path/a', message: 'Cras faucibus eget ante ut consectetur' },\n]\nconst columns = [\n  {\n    key: 'file',\n    label: 'File',\n    sortable: true,\n  },\n  {\n    key: 'message',\n    label: 'Message',\n  }\n]\n\nexport default class MyTable extends ReactTable {\n  sortRows(sortInfo: Array<Object>, rows: Array<Object>): Array<Object> {\n    // Convert [{key: 'file', type: 'asc'}] -> { file: 'asc' }\n    const sortColumns = {}\n    for (let i = 0, length = sortInfo.length; i < length; i++) {\n      const entry = sortInfo[i]\n      sortColumns[entry.column] = entry.type\n    }\n\n    return rows.sort(function(a, b) {\n      if (sortColumns.file) {\n        const multiplyWith = sortColumns.file === 'asc' ? 1 : -1\n        const sortValue = a.severity.localeCompare(b.severity)\n        if (sortValue !== 0) {\n          return multiplyWith * sortValue\n        }\n      }\n    })\n  }\n  render() {\n    return (\n      <ReactTable\n        rows={rows},\n        columns={columns},\n        initialSort={[{ column: 'file', type: 'asc' }]}\n        sort={this.sortRows}\n        rowKey={row => JSON.stringify(row)}\n        renderHeaderColumn={column => <span>{column}</span>}\n        renderBodyColumn={(row, column) => <span>{row[column]}</span>}\n      />\n    )\n  }\n}\n```\n\n## License\n\nThis package is licensed under the terms of MIT License.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/steelbrain/react-table.git"
  },
  "scripts": {
    "build": "npm run clean; babel src --out-dir lib",
    "clean": "rm -rf lib",
    "test": "(apm test) && (flow check) && (eslint . )",
    "watch": "npm run build -- -w"
  },
  "version": "1.0.1"
}
